name: SonarCloud

on:
  push:
    branches: [ui-streamlit, music-reco, main]
    paths:
      - 'backend/**'
      - 'ui/**'
      - 'sonar-project.properties'
      - '.github/workflows/**'
  pull_request:
    branches: [ui-streamlit, music-reco, main]
    paths:
      - 'backend/**'
      - 'ui/**'
      - 'sonar-project.properties'
      - '.github/workflows/**'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: sonar-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps + test tools (backend + ui)
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          if [ -f ui/requirements.txt ]; then pip install -r ui/requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run tests (backend) + coverage
        working-directory: backend
        run: |
          PYTHONPATH=. pytest -q --maxfail=1 --disable-warnings \
            --cov=src --cov=api --cov-report=xml:coverage.xml
          test -f coverage.xml || (echo "backend/coverage.xml manquant" && exit 1)

      - name: Run tests (ui) + coverage
        working-directory: ui
        run: |
          # si pas de tests, créer un test minimal pour éviter 0 fichier
          if [ ! -d tests ]; then mkdir -p tests && echo -e "def test_smoke():\n    assert True" > tests/test_smoke.py; fi
          PYTHONPATH=. pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=xml:coverage.xml
          test -f coverage.xml || (echo "ui/coverage.xml manquant" && exit 1)

      - name: Show coverage files
        run: |
          ls -l backend/coverage.xml ui/coverage.xml
          head -n 10 backend/coverage.xml || true
          head -n 10 ui/coverage.xml || true

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xmls
          path: |
            backend/coverage.xml
            ui/coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate (PR only)
        if: github.event_name == 'pull_request'
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
