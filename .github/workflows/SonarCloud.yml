name: SonarCloud

on:
  push:
    branches: [main, music-reco, ui-streamlit, flow-branch]
    paths:
      - 'backend/**'
      - 'ui/**'
      - 'sonar-project.properties'
      - '.github/workflows/**'
  pull_request:
    branches: [main, music-reco, ui-streamlit, flow-branch]
    paths:
      - 'backend/**'
      - 'ui/**'
      - 'sonar-project.properties'
      - '.github/workflows/**'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: sonar-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps + test tools
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov

      - name: Run tests (backend) + coverage
        run: |
          cd backend
          pytest -q --maxfail=1 --disable-warnings \
            --cov=src --cov=api --cov-report=xml:coverage.xml || echo "no tests yet"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate (PR only)
        if: github.event_name == 'pull_request'
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
